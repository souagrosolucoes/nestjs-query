"use strict";(self.webpackChunknestjs_query=self.webpackChunknestjs_query||[]).push([[1409],{433:(e,n,s)=>{s.d(n,{Z:()=>t});s(7294);var l=s(6905);const i={tabItem:"tabItem_Ymn6"};var r=s(5893);function t(e){var n=e.children,s=e.hidden,t=e.className;return(0,r.jsx)("div",{role:"tabpanel",className:(0,l.Z)(i.tabItem,t),hidden:s,children:n})}},2808:(e,n,s)=>{s.d(n,{Z:()=>q});var l=s(7294),i=s(6905),r=s(3735),t=s(6550),o=s(613),a=s(4423),c=s(636),d=s(9747);function u(e){var n,s;return null!=(n=null==(s=l.Children.toArray(e).filter((function(e){return"\n"!==e})).map((function(e){if(!e||(0,l.isValidElement)(e)&&((n=e.props)&&"object"==typeof n&&"value"in n))return e;var n;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})))?void 0:s.filter(Boolean))?n:[]}function h(e){var n=e.values,s=e.children;return(0,l.useMemo)((function(){var e=null!=n?n:function(e){return u(e).map((function(e){var n=e.props;return{value:n.value,label:n.label,attributes:n.attributes,default:n.default}}))}(s);return function(e){var n=(0,c.lx)(e,(function(e,n){return e.value===n.value}));if(n.length>0)throw new Error('Docusaurus error: Duplicate values "'+n.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.')}(e),e}),[n,s])}function f(e){var n=e.value;return e.tabValues.some((function(e){return e.value===n}))}function p(e){var n=e.queryString,s=void 0!==n&&n,i=e.groupId,r=(0,t.k6)(),o=function(e){var n=e.queryString,s=void 0!==n&&n,l=e.groupId;if("string"==typeof s)return s;if(!1===s)return null;if(!0===s&&!l)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return null!=l?l:null}({queryString:s,groupId:i});return[(0,a._X)(o),(0,l.useCallback)((function(e){if(o){var n=new URLSearchParams(r.location.search);n.set(o,e),r.replace(Object.assign({},r.location,{search:n.toString()}))}}),[o,r])]}function j(e){var n,s,i,r,t=e.defaultValue,a=e.queryString,c=void 0!==a&&a,u=e.groupId,j=h(e),x=(0,l.useState)((function(){return function(e){var n,s=e.defaultValue,l=e.tabValues;if(0===l.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(s){if(!f({value:s,tabValues:l}))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+s+'" but none of its children has the corresponding value. Available values are: '+l.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");return s}var i=null!=(n=l.find((function(e){return e.default})))?n:l[0];if(!i)throw new Error("Unexpected error: 0 tabValues");return i.value}({defaultValue:t,tabValues:j})})),g=x[0],m=x[1],v=p({queryString:c,groupId:u}),b=v[0],y=v[1],q=(n=function(e){return e?"docusaurus.tab."+e:null}({groupId:u}.groupId),s=(0,d.Nk)(n),i=s[0],r=s[1],[i,(0,l.useCallback)((function(e){n&&r.set(e)}),[n,r])]),N=q[0],w=q[1],I=function(){var e=null!=b?b:N;return f({value:e,tabValues:j})?e:null}();return(0,o.Z)((function(){I&&m(I)}),[I]),{selectedValue:g,selectValue:(0,l.useCallback)((function(e){if(!f({value:e,tabValues:j}))throw new Error("Can't select invalid tab value="+e);m(e),y(e),w(e)}),[y,w,j]),tabValues:j}}var x=s(5730);const g={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var m=s(5893);function v(e){var n=e.className,s=e.block,l=e.selectedValue,t=e.selectValue,o=e.tabValues,a=[],c=(0,r.o5)().blockElementScrollPositionUntilNextRender,d=function(e){var n=e.currentTarget,s=a.indexOf(n),i=o[s].value;i!==l&&(c(n),t(i))},u=function(e){var n,s=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":var l,i=a.indexOf(e.currentTarget)+1;s=null!=(l=a[i])?l:a[0];break;case"ArrowLeft":var r,t=a.indexOf(e.currentTarget)-1;s=null!=(r=a[t])?r:a[a.length-1]}null==(n=s)||n.focus()};return(0,m.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.Z)("tabs",{"tabs--block":s},n),children:o.map((function(e){var n=e.value,s=e.label,r=e.attributes;return(0,m.jsx)("li",Object.assign({role:"tab",tabIndex:l===n?0:-1,"aria-selected":l===n,ref:function(e){return a.push(e)},onKeyDown:u,onClick:d},r,{className:(0,i.Z)("tabs__item",g.tabItem,null==r?void 0:r.className,{"tabs__item--active":l===n}),children:null!=s?s:n}),n)}))})}function b(e){var n=e.lazy,s=e.children,r=e.selectedValue,t=(Array.isArray(s)?s:[s]).filter(Boolean);if(n){var o=t.find((function(e){return e.props.value===r}));return o?(0,l.cloneElement)(o,{className:(0,i.Z)("margin-top--md",o.props.className)}):null}return(0,m.jsx)("div",{className:"margin-top--md",children:t.map((function(e,n){return(0,l.cloneElement)(e,{key:n,hidden:e.props.value!==r})}))})}function y(e){var n=j(e);return(0,m.jsxs)("div",{className:(0,i.Z)("tabs-container",g.tabList),children:[(0,m.jsx)(v,Object.assign({},n,e)),(0,m.jsx)(b,Object.assign({},n,e))]})}function q(e){var n=(0,x.Z)();return(0,m.jsx)(y,Object.assign({},e,{children:u(e.children)}),String(n))}},4559:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>a,default:()=>f,frontMatter:()=>o,metadata:()=>c,toc:()=>u});var l=s(5893),i=s(1151),r=s(2808),t=s(433);const o={title:"Queries"},a=void 0,c={id:"concepts/queries",title:"Queries",description:"The core of nestjs-query is the Query, it is used by @souagrosolucoes/nestjs-query-graphql, @souagrosolucoes/nestjs-query-typeorm",source:"@site/docs/concepts/queries.mdx",sourceDirName:"concepts",slug:"/concepts/queries",permalink:"/nestjs-query/docs/concepts/queries",draft:!1,unlisted:!1,editUrl:"https://github.com/tripss/nestjs-query/edit/master/documentation/docs/concepts/queries.mdx",tags:[],version:"current",frontMatter:{title:"Queries"},sidebar:"docs",previous:{title:"DTOs",permalink:"/nestjs-query/docs/concepts/dtos"},next:{title:"QueryService",permalink:"/nestjs-query/docs/concepts/services"}},d={},u=[{value:"Filtering",id:"filtering",level:2},{value:"Simple",id:"simple",level:3},{value:"Multiple Fields",id:"multiple-fields",level:3},{value:"Multiple Comparisons on a single field.",id:"multiple-comparisons-on-a-single-field",level:3},{value:"And/Or",id:"andor",level:3},{value:"Paging",id:"paging",level:2},{value:"Sorting",id:"sorting",level:2},{value:"Filter Reference",id:"filter-reference",level:2},{value:"Common Comparisons",id:"common-comparisons",level:3},{value:"String Comparisons",id:"string-comparisons",level:3}];function h(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",hr:"hr",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.a)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsxs)(n.p,{children:["The core of ",(0,l.jsx)(n.code,{children:"nestjs-query"})," is the ",(0,l.jsx)(n.code,{children:"Query"}),", it is used by ",(0,l.jsx)(n.code,{children:"@souagrosolucoes/nestjs-query-graphql"}),", ",(0,l.jsx)(n.code,{children:"@souagrosolucoes/nestjs-query-typeorm"}),"\n",(0,l.jsx)(n.code,{children:"@souagrosolucoes/nestjs-query-sequelize"}),", ",(0,l.jsx)(n.code,{children:"@souagrosolucoes/nestjs-query-mongoose"})," and ",(0,l.jsx)(n.code,{children:"@souagrosolucoes/nestjs-query-typegoose"}),"."]}),"\n",(0,l.jsx)(n.p,{children:"The query interface contains three optional fields."}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.code,{children:"filter"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.code,{children:"paging"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.code,{children:"sorting"})}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:"All examples will be based on the following class."}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:"interface MyClass {\n  title: string;\n  completed: boolean;\n  age: number;\n}\n"})}),"\n",(0,l.jsx)(n.h2,{id:"filtering",children:"Filtering"}),"\n",(0,l.jsxs)(n.p,{children:["The ",(0,l.jsx)(n.code,{children:"filter"})," field allows the filtering of fields based on the shape of the object the filter is used for."]}),"\n",(0,l.jsxs)(n.p,{children:["See the ",(0,l.jsx)(n.a,{href:"#filter-reference",children:"filter reference"})," for a complete list of comparisons available."]}),"\n",(0,l.jsx)(n.admonition,{type:"note",children:(0,l.jsxs)(n.p,{children:["The ",(0,l.jsx)(n.code,{children:"Filter"})," interface is typesafe and the typescript compiler will complain if you include extra fields that are not present on the type you are creating the query for."]})}),"\n",(0,l.jsxs)(n.p,{children:["Lets create a simple filter that would allow us to filter for titles equal to ",(0,l.jsx)(n.code,{children:"'Foo Bar'"})]}),"\n",(0,l.jsx)(n.h3,{id:"simple",children:"Simple"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:"import { Query } from '@souagrosolucoes/nestjs-query-core';\n\nconst q: Query<MyClass> = {\n  filter: {\n    title: { eq: 'Foo Bar' },\n  },\n};\n"})}),"\n",(0,l.jsx)(n.h3,{id:"multiple-fields",children:"Multiple Fields"}),"\n",(0,l.jsx)(n.p,{children:"You can also filter on multiple fields."}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:"import { Query } from '@souagrosolucoes/nestjs-query-core';\n\nconst q: Query<MyClass> = {\n  filter: {\n    // title = 'Foo Bar' AND completed IS TRUE and age > 10\n    title: { eq: 'Foo Bar' },\n    completed: { is: true },\n    age: { gt: 10 },\n  },\n};\n"})}),"\n",(0,l.jsx)(n.h3,{id:"multiple-comparisons-on-a-single-field",children:"Multiple Comparisons on a single field."}),"\n",(0,l.jsx)(n.p,{children:"If you include multiple comparisons for a single field they will be ORed together."}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:"import { Query } from '@souagrosolucoes/nestjs-query-core';\n\nconst q: Query<MyClass> = {\n  filter: {\n    // title = 'Foo Bar' OR field LIKE '%foo%'\n    title: { eq: 'Foo Bar', like: '%foo%' },\n  },\n};\n"})}),"\n",(0,l.jsx)(n.h3,{id:"andor",children:"And/Or"}),"\n",(0,l.jsxs)(n.p,{children:["The filter also allows for more complex ",(0,l.jsx)(n.code,{children:"and"})," and ",(0,l.jsx)(n.code,{children:"or"})," filters. The ",(0,l.jsx)(n.code,{children:"and"})," and ",(0,l.jsx)(n.code,{children:"or"})," accept an array of filters allowing\nfor nested complex queries."]}),"\n",(0,l.jsxs)(n.p,{children:["In this example we ",(0,l.jsx)(n.code,{children:"AND"})," two filters for the same property together: ",(0,l.jsx)(n.code,{children:"age >= 10 AND age <= 20"}),"."]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:"const q: Query<MyClass> = {\n  filter: {\n    and: [{ age: { gte: 10 } }, { age: { lte: 20 } }],\n  },\n};\n"})}),"\n",(0,l.jsxs)(n.p,{children:["In this example a simple ",(0,l.jsx)(n.code,{children:"OR"})," condition is created: ",(0,l.jsx)(n.code,{children:"age >= 10 OR title NOT LIKE '%bar'"})]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:"const q: Query<MyClass> = {\n  filter: {\n    or: [{ age: { gte: 10 } }, { title: { notLike: '%bar' } }],\n  },\n};\n"})}),"\n",(0,l.jsxs)(n.p,{children:["This example combines ",(0,l.jsx)(n.code,{children:"AND"})," and ",(0,l.jsx)(n.code,{children:"OR"})," filters: ",(0,l.jsx)(n.code,{children:"age >= 10 AND (title LIKE '%bar' OR title = 'foobar')"}),"."]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:"const q: Query<MyClass> = {\n  filter: {\n    and: [\n      { age: { gte: 10 } },\n      {\n        or: [{ title: { like: '%bar' } }, { title: { eq: 'foobar' } }],\n      },\n    ],\n  },\n};\n"})}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h2,{id:"paging",children:"Paging"}),"\n",(0,l.jsxs)(n.p,{children:["The ",(0,l.jsx)(n.code,{children:"core"})," package defines a basic paging interface has two optional fields ",(0,l.jsx)(n.code,{children:"limit"})," and ",(0,l.jsx)(n.code,{children:"offset"}),"."]}),"\n",(0,l.jsxs)(r.Z,{defaultValue:"limit-offset",values:[{label:"Limit And Offset",value:"limit-offset"},{label:"Limit",value:"limit"},{label:"Offset",value:"offset"}],children:[(0,l.jsx)(t.Z,{value:"limit-offset",children:(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:"const q: Query<MyClass> = {\n  paging: {\n    limit: 10,\n    offset: 10,\n  },\n};\n"})})}),(0,l.jsx)(t.Z,{value:"limit",children:(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:"const q: Query<MyClass> = {\n  paging: {\n    limit: 20,\n  },\n};\n"})})}),(0,l.jsx)(t.Z,{value:"offset",children:(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:"const q: Query<MyClass> = {\n  paging: {\n    offset: 10,\n  },\n};\n"})})})]}),"\n",(0,l.jsxs)(n.admonition,{type:"note",children:[(0,l.jsxs)(n.p,{children:["When using filters on relations with ",(0,l.jsx)(n.code,{children:"typeorm"})," in combination with paging, performance can be degraded on large result\nsets. For more info see this ",(0,l.jsx)(n.a,{href:"https://github.com/tripss/nestjs-query/issues/954",children:"issue"})]}),(0,l.jsx)(n.p,{children:"In short two queries will be executed:"}),(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"The first one fetching a distinct list of primary keys with paging applied."}),"\n",(0,l.jsx)(n.li,{children:"The second uses primary keys from the first query to fetch the actual records."}),"\n"]})]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h2,{id:"sorting",children:"Sorting"}),"\n",(0,l.jsxs)(n.p,{children:["The ",(0,l.jsx)(n.code,{children:"sorting"})," field allows to specify the sort order for your query."]}),"\n",(0,l.jsxs)(n.p,{children:["The ",(0,l.jsx)(n.code,{children:"sorting"})," field is an array of object containing:"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"field"})," - the field to sort on"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"direction"})," - ",(0,l.jsx)(n.code,{children:"ASC"})," or ",(0,l.jsx)(n.code,{children:"DESC"})]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"nulls?"})," - Optional nulls sort, ",(0,l.jsx)(n.code,{children:"NULLS_FIRST"})," or ",(0,l.jsx)(n.code,{children:"NULLS_LAST"})]}),"\n"]}),"\n",(0,l.jsxs)(r.Z,{defaultValue:"single",values:[{label:"Single-Sort",value:"single"},{label:"Multi-Sort",value:"multi"}],children:[(0,l.jsx)(t.Z,{value:"single",children:(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:"// import { SortDirection } from '@souagrosolucoes/nestjs-query-core';\n\nconst q: Query<MyClass> = {\n  sorting: [{ field: 'title', direction: SortDirection.DESC }],\n};\n"})})}),(0,l.jsx)(t.Z,{value:"multi",children:(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:"// import { SortDirection } from '@souagrosolucoes/nestjs-query-core';\n\nconst q: Query<MyClass> = {\n  sorting: [\n    { field: 'title', direction: SortDirection.DESC },\n    { field: 'age', direction: SortDirection.ASC },\n  ],\n};\n"})})})]}),"\n",(0,l.jsx)(n.h2,{id:"filter-reference",children:"Filter Reference"}),"\n",(0,l.jsxs)(n.p,{children:["The ",(0,l.jsx)(n.code,{children:"filter"})," option supports the following field comparisons."]}),"\n",(0,l.jsx)(n.admonition,{type:"note",children:(0,l.jsx)(n.p,{children:"The following examples show an approximation of the SQL that will be generated. The ORM will take care of handling the dialect specifics"})}),"\n",(0,l.jsx)(n.h3,{id:"common-comparisons",children:"Common Comparisons"}),"\n",(0,l.jsx)(n.p,{children:"All types support the following comparisons."}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"is"})," - Check is a field is ",(0,l.jsx)(n.code,{children:"null"}),", ",(0,l.jsx)(n.code,{children:"true"})," or ",(0,l.jsx)(n.code,{children:"false"}),".","\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:"// title IS NULL\n{\n  title: {\n    is: null;\n  }\n}\n// completed IS TRUE\n{\n  completed: {\n    is: true;\n  }\n}\n// completed IS false\n{\n  completed: {\n    is: false;\n  }\n}\n"})}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"isNot"})," - Check is a field is not ",(0,l.jsx)(n.code,{children:"null"}),", ",(0,l.jsx)(n.code,{children:"true"})," or ",(0,l.jsx)(n.code,{children:"false"}),".","\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:"// title IS NOT NULL\n{\n  title: {\n    isNot: null;\n  }\n}\n// completed IS NOT TRUE\n{\n  completed: {\n    isNot: true;\n  }\n}\n// completed IS NOT false\n{\n  completed: {\n    isNot: false;\n  }\n}\n"})}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"neq"})," - field is not equal to a value.","\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:"// title != 'foo'\n{\n  title: {\n    neq: 'foo';\n  }\n}\n"})}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"gt"})," - field is greater than a value.","\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:"// title > 'foo'\n{\n  title: {\n    gt: 'foo';\n  }\n}\n"})}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"gte"})," - field is greater than or equal to a value.","\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:"// title >= 'foo'\n{\n  title: {\n    gte: 'foo';\n  }\n}\n"})}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"lt"})," - field is less than a value.","\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:"// title < 'foo'\n{\n  title: {\n    lt: 'foo';\n  }\n}\n"})}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"lte"})," - field is less than or equal to a value.","\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:"// title <= 'foo'\n{\n  title: {\n    lte: 'foo';\n  }\n}\n"})}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"in"})," - field is in a list of values.","\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:"// title IN ('foo', 'bar', 'baz')\n{ title: { in: ['foo', 'bar', 'baz'] } }\n"})}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"notIn"})," - field is not in a list of values.","\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:"// title NOT IN ('foo', 'bar', 'baz')\n{\n  title: {\n    notIn: ['foo', 'bar', 'baz'];\n  }\n}\n"})}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"string-comparisons",children:"String Comparisons"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"like"})," - field is like a value (case sensitive).","\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:"// title LIKE 'Foo%'\n{\n  title: {\n    like: 'Foo%';\n  }\n}\n"})}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"notLike"})," - field is not like a value (case sensitive).","\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:"// title NOT LIKE 'Foo%'\n{\n  title: {\n    notLike: 'Foo%';\n  }\n}\n"})}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"iLike"})," - field is like a value (case insensitive).","\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:"// title ILIKE 'Foo%'\n{\n  title: {\n    iLike: 'Foo%';\n  }\n}\n"})}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"notILike"})," - field is not like a value (case insensitive).","\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:"// title NOT ILIKE 'Foo%'\n{\n  title: {\n    notILike: 'Foo%';\n  }\n}\n"})}),"\n"]}),"\n"]})]})}function f(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(h,{...e})}):h(e)}},1151:(e,n,s)=>{s.d(n,{Z:()=>o,a:()=>t});var l=s(7294);const i={},r=l.createContext(i);function t(e){const n=l.useContext(r);return l.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:t(e.components),l.createElement(r.Provider,{value:n},e.children)}}}]);