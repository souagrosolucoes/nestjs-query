name: Release

on:
  workflow_dispatch:
    inputs:
      environment:
        description: Environment
        required: true
        default: prod
        type: choice
        options:
          - prod
          - alpha

      releaseAs:
        description: Release as (Required if env = alpha)
        required: false
        type: choice
        options:
          - premajor
          - preminor
          - prepatch
          - prerelease

env:
  NX_BRANCH: ${{ github.event.number }}
  NX_RUN_GROUP: ${{ github.run_id }}

jobs:

  prepare-env:
    runs-on: ubuntu-latest
    outputs:
      GITHUB_HEAD_REF: ${{ steps.script.outputs.headRef }}
      GITHUB_BASE_REF: ${{ steps.script.outputs.tagHash }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Cache node modules
        id: cache
        uses: actions/cache@v4
        with:
          path: |
            **/node_modules
          key: ${{ env.DEPENDENCIES_CACHE }}-${{ hashFiles('yarn.lock') }}

      - name: yarn install
        if: steps.cache.outputs.cache-hit != 'true'
        run: yarn install

      - name: Set correct env vars
        id: script
        uses: ./tools/actions/set-master-vars

  release:
    needs: [ prepare-env ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Cache node modules
        uses: actions/cache@v4
        with:
          path: |
            **/node_modules
          key: ${{ env.DEPENDENCIES_CACHE }}-${{ hashFiles('yarn.lock') }}

      - name: GIT/NPM config
        run: |
          git config user.name "${GITHUB_ACTOR}"
          git config user.email "${GITHUB_ACTOR}@users.noreply.github.com"
          echo -e "@souagrosolucoes:registry=https://npm.pkg.github.com \n@souagrosolucoes:always-auth=true" > .npmrc
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Version
        if: ${{ inputs.environment == 'prod' }}
        run: yarn nx run workspace:version

      - name: Version (Alpha)
        if: ${{ inputs.environment == 'alpha' }}
        run: yarn nx run workspace:version --releaseAs=${{inputs.releaseAs}} --preid=alpha

      - name: Build
        run: yarn nx run-many --target=build --all

      - name: Publish
        run: yarn nx run-many --target=publish --all
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Push GIT
        run: git push --follow-tags origin ${{ needs.prepare-env.outputs.GITHUB_HEAD_REF }}
